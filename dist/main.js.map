{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/shared/model/configuration.model.ts","webpack:///./src/app/shared/service/configuration.service.ts","webpack:///./src/app/shared/service/data.service.ts","webpack:///./src/app/shared/service/storage.service.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./admin/admin.module\": [\n\t\t\"./src/app/admin/admin.module.ts\",\n\t\t\"admin-admin-module\"\n\t],\n\t\"./admin_dashboard/admin_dashboard.module\": [\n\t\t\"./src/app/admin/admin_dashboard/admin_dashboard.module.ts\",\n\t\t\"admin_dashboard-admin_dashboard-module\"\n\t],\n\t\"./admin_destination/admin_city/admin_city.module\": [\n\t\t\"./src/app/admin/admin_destination/admin_city/admin_city.module.ts\",\n\t\t\"common\",\n\t\t\"admin_destination-admin_city-admin_city-module\"\n\t],\n\t\"./admin_destination/admin_country/admin_country.module\": [\n\t\t\"./src/app/admin/admin_destination/admin_country/admin_country.module.ts\",\n\t\t\"common\",\n\t\t\"admin_destination-admin_country-admin_country-module\"\n\t],\n\t\"./admin_destination/admin_destination.module\": [\n\t\t\"./src/app/admin/admin_destination/admin_destination.module.ts\",\n\t\t\"common\",\n\t\t\"admin_destination-admin_destination-module\"\n\t],\n\t\"./admin_destination/admin_provience/admin_provience.module\": [\n\t\t\"./src/app/admin/admin_destination/admin_provience/admin_provience.module.ts\",\n\t\t\"common\",\n\t\t\"admin_destination-admin_provience-admin_provience-module\"\n\t],\n\t\"./destination/city/city.module\": [\n\t\t\"./src/app/website/destination/city/city.module.ts\",\n\t\t\"common\",\n\t\t\"destination-city-city-module\"\n\t],\n\t\"./destination/destination.module\": [\n\t\t\"./src/app/website/destination/destination.module.ts\",\n\t\t\"common\",\n\t\t\"destination-destination-module\"\n\t],\n\t\"./destination/provience/provience.module\": [\n\t\t\"./src/app/website/destination/provience/provience.module.ts\",\n\t\t\"common\",\n\t\t\"destination-provience-provience-module\"\n\t],\n\t\"./home/home.module\": [\n\t\t\"./src/app/website/home/home.module.ts\",\n\t\t\"home-home-module\"\n\t],\n\t\"./website/website.module\": [\n\t\t\"./src/app/website/website.module.ts\",\n\t\t\"website-website-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\n//import { AuthGuard } from './shared';\n\nconst routes: Routes = [\n    { path: 'admin', loadChildren: './admin/admin.module#AdminModule'}, //jacob-\n    { path: '', loadChildren: './website/website.module#WebsiteModule'}, //jacob-\n    //{ path: '', loadChildren: './admin/admin.module#AdminModule'}, //jacob-\n    \n    //{ path: 'dashboard', loadChildren: './dashboard/dashboard.module#DashboardModule'},\n    //{ path: 'catalogattributes',  loadChildren: './catalog/catalogAttributes/catalogAttributes.module#CatalogAttributesModule'},\n    /*\n    { path: 'login', loadChildren: './login/login.module#LoginModule' },\n    { path: 'signup', loadChildren: './signup/signup.module#SignupModule' },\n    { path: 'error', loadChildren: './server-error/server-error.module#ServerErrorModule' },\n    { path: 'access-denied', loadChildren: './access-denied/access-denied.module#AccessDeniedModule' },\n    { path: 'not-found', loadChildren: './not-found/not-found.module#NotFoundModule' },\n    { path: '**', redirectTo: 'not-found' }\n    */\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { enableTracing: true }) ],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","module.exports = \"\"","import { Title } from '@angular/platform-browser';\r\nimport { Component, ViewEncapsulation, OnInit } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { Subscription }   from 'rxjs';\r\n\r\nimport { DataService } from './shared/service/data.service';\r\n//import { SecurityService } from './website/shared/service/security.service';\r\nimport { ConfigurationService } from './shared/service/configuration.service';\r\n\r\n/*\r\n * App Component\r\n * Top Level Component\r\n */\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    styleUrls: ['./app.component.scss'],\r\n    templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent implements OnInit {\r\n    Authenticated: boolean = false;\r\n    subscription: Subscription;\r\n\r\n    //constructor(private titleService: Title, private securityService: SecurityService, private configurationService: ConfigurationService) {\r\n    constructor(private titleService: Title, private configurationService: ConfigurationService) {\r\n        //this.Authenticated = this.securityService.IsAuthorized;\r\n    }\r\n\r\n    ngOnInit() {\r\n        //console.log('app on init');\r\n        //this.subscription = this.securityService.authenticationChallenge$.subscribe(res => this.Authenticated = res);\r\n\r\n        //Get configuration from server environment variables:\r\n        //console.log('configuration');\r\n        this.configurationService.load();\r\n    }\r\n\r\n    public setTitle(newTitle: string) {\r\n        this.titleService.setTitle('SnowBC');\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SharedModule } from './shared/shared.module';\nimport { FacebookModule } from 'ngx-facebook';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n \n  imports: [\n    BrowserModule,\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    NgbModule,\n    NgbDropdownModule,\n    SharedModule.forRoot(),\n    FacebookModule.forRoot(),\n    \n  ],\n  declarations: [\n    AppComponent,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class IConfiguration{\r\n    countryUrl : String;\r\n    provienceUrl : String;\r\n    cityUrl : String\r\n}","import { Injectable }       from '@angular/core';\r\nimport { Http, Response, RequestOptionsArgs, RequestMethod, Headers } from '@angular/http';\r\nimport { IConfiguration }   from '../model/configuration.model';\r\nimport { StorageService }   from './storage.service';\r\n\r\nimport 'rxjs/Rx';\r\nimport { Observable ,  Observer ,  Subject }       from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class ConfigurationService {\r\n    serverSettings: IConfiguration;\r\n    // observable that is fired when settings are loaded from server\r\n    private settingsLoadedSource = new Subject();\r\n    settingsLoaded$ = this.settingsLoadedSource.asObservable();\r\n    isReady: boolean = false;\r\n\r\n    constructor(private http: Http, private storageService: StorageService) { }\r\n    \r\n    load() {\r\n            //console.log(  \"here ----------------------------------\");\r\n            this.serverSettings = new IConfiguration;\r\n            \r\n            this.serverSettings.countryUrl = \"http://localhost:61125/api/countries\";\r\n\r\n            this.storageService.store('countryUrl', this.serverSettings.countryUrl);\r\n            //console.log(this.serverSettings.countryUrl + \"----------------------------------\");\r\n            this.storageService.store('provienceUrl', this.serverSettings.provienceUrl);\r\n            this.storageService.store('cityUrl', this.serverSettings.cityUrl);\r\n            this.isReady = true;\r\n            this.settingsLoadedSource.next();\r\n            \r\n        // const baseURI = document.baseURI.endsWith('/') ? document.baseURI : `${document.baseURI}/`;\r\n        // let url = `${baseURI}Home/Configuration`;\r\n        // this.http.get(url).subscribe((response: Response) => {\r\n        //     console.log('server settings loaded');\r\n        //     this.serverSettings = response.json();\r\n        //     console.log(this.serverSettings);\r\n        //     this.storageService.store('countryUrl', this.serverSettings.countryUrl);\r\n        //     this.storageService.store('provienceUrl', this.serverSettings.provienceUrl);\r\n        //     this.storageService.store('cityUrl', this.serverSettings.cityUrl);\r\n            \r\n            \r\n        //     //this.storageService.store('orderingUrl', this.serverSettings.orderingUrl);\r\n        //     //this.storageService.store('marketingUrl', this.serverSettings.marketingUrl);\r\n        //     //this.storageService.store('activateCampaignDetailFunction', this.serverSettings.activateCampaignDetailFunction);\r\n        //     this.isReady = true;\r\n        //     this.settingsLoadedSource.next();\r\n        // });\r\n    }\r\n}\r\n","\nimport {throwError as observableThrowError,  Observable ,  Observer } from 'rxjs';\n\nimport {map, catchError} from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\r\nimport { Http, Response, RequestOptionsArgs, RequestMethod, Headers } from '@angular/http';\r\n\r\nimport 'rxjs/Rx';\r\n\r\n\r\n\r\n//import { Guid } from '../../../guid';\r\n//import { SecurityService } from './security.service';\r\n\r\n// Implementing a Retry-Circuit breaker policy \r\n// is pending to do for the SPA app\r\n@Injectable()\r\nexport class DataService {\r\n    //constructor(private http: Http, private securityService: SecurityService) { }\r\n    constructor(private http: Http) {\r\n    }\r\n\r\n    get(url: string, params?: any): Observable<Response> {\r\n        let options: RequestOptionsArgs = {};\r\n        \r\n        // if (this.securityService) {\r\n        //     options.headers = new Headers();\r\n        //     options.headers.append('Authorization', 'Bearer ' + this.securityService.GetToken());\r\n        // }\r\n        options.headers = new Headers();\r\n        //console.log(\"----------------------------dataservice--\" + url + \"--dataservice------------------------\");\r\n        return this.http.get(url, options).pipe(map(\r\n            (res: Response) => {\r\n                //console.log(\"----------------------------dataservicereturn--\" +res+ \"--dataservice------------------------\");\r\n                return res;\r\n            }),catchError(this.handleError),);\r\n    }\r\n\r\n    /*\r\n    postWithId(url: string, data: any, params?: any): Observable<Response> {\r\n        return this.doPost(url, data, true, params);\r\n    }\r\n    */\r\n\r\n    post(url: string, data: any, params?: any): Observable<Response> {\r\n        return this.doPost(url, data, false, params);\r\n    }\r\n\r\n    putWithId(url: string, data: any, params?: any): Observable<Response> {\r\n        \r\n        return this.doPut(url, data, false, params);\r\n    }\r\n\r\n\r\n    private doPost(url: string, data: any, needId: boolean, params?: any): Observable<Response> {\r\n        let options: RequestOptionsArgs = {};\r\n\r\n        options.headers = new Headers();\r\n        options.headers.append(\"Content-Type\", \"application/json\");\r\n        options.headers.append(\"Accept\", \"application/json\");\r\n\r\n        // if (this.securityService) {\r\n        //     options.headers.append('Authorization', 'Bearer ' + this.securityService.GetToken());\r\n        // }\r\n        // if (needId) {\r\n        //     let guid = Guid.newGuid();\r\n        //     options.headers.append('x-requestid', guid);\r\n        // }\r\n        \r\n       \r\n        return this.http.post(url, data, options).pipe(map(\r\n            (res: Response) => {\r\n                return res;\r\n            }),catchError(this.handleError),);\r\n    }\r\n\r\n\r\n\r\n    private doPut(url: string, data: any, needId: boolean, params?: any): Observable<Response> {\r\n        let options: RequestOptionsArgs = {};\r\n\r\n        options.headers = new Headers();\r\n        options.headers.append(\"Content-Type\", \"application/json\");\r\n        options.headers.append(\"Accept\", \"application/json\");\r\n\r\n        //options.headers.append('Access-Control-Allow-Headers', 'Content-Type'); \r\n\r\n        \r\n        // if (this.securityService) {\r\n        //     options.headers.append('Authorization', 'Bearer ' + this.securityService.GetToken());                                                                                                                                                               \r\n        // }\r\n        \r\n        // if (needId) {\r\n        //     let guid = Guid.newGuid();\r\n        //     options.headers.append('x-requestid', guid);\r\n        // }\r\n        \r\n       \r\n        //console.log(options);\r\n        //console.log(options +'------------------------here2---------------------' + JSON.stringify(data));\r\n        return this.http.put(url, data, options).pipe(map(\r\n            (res: Response) => {\r\n                return res;\r\n            }),catchError(this.handleError),);\r\n    }\r\n\r\n\r\n/*\r\n    delete(url: string, params?: any) {\r\n        let options: RequestOptionsArgs = {};\r\n\r\n        \r\n        // if (this.securityService) {\r\n        //     options.headers = new Headers();\r\n        //     options.headers.append('Authorization', 'Bearer ' + this.securityService.GetToken());\r\n        // }\r\n        \r\n\r\n        console.log('data.service deleting');\r\n        // return this.http.delete(url, options).subscribe(\r\n        //        return res;\r\n        //    );\r\n\r\n        this.http.delete(url, options).subscribe((res) => {\r\n            console.log('deleted');\r\n        });\r\n    }\r\n*/\r\n    private handleError(error: any) {\r\n        console.error('server error:', error);\r\n        if (error instanceof Response) {\r\n            let errMessage = '';\r\n            try {\r\n                errMessage = error.json();\r\n            } catch (error) {\r\n                errMessage = error.statusText;\r\n            }\r\n            return observableThrowError(errMessage);\r\n        }\r\n        return observableThrowError(error || 'server error');\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class StorageService {\r\n    private storage: any;\r\n\r\n    constructor() {\r\n        this.storage = sessionStorage; // localStorage;\r\n        //this.storage = window.localStorage;\r\n    }\r\n\r\n    public retrieve(key: string): any {\r\n        let item = this.storage.getItem(key);\r\n\r\n        if (item && item !== 'undefined') {\r\n            return JSON.parse(this.storage.getItem(key));\r\n        }\r\n\r\n        return;\r\n    }\r\n\r\n    public store(key: string, value: any) {\r\n        this.storage.setItem(key, JSON.stringify(value));\r\n    }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule, FormBuilder } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HttpModule, JsonpModule } from '@angular/http';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n// Services\r\nimport { DataService } from './service/data.service';\r\n//import { BasketWrapperService } from './services/basket.wrapper.service';\r\n//import { SecurityService } from './services/security.service';\r\nimport { ConfigurationService } from './service/configuration.service';\r\nimport { StorageService } from './service/storage.service';\r\n\r\n// Components:\r\n/*\r\nimport { Pager } from './components/pager/pager';\r\nimport { Header } from './components/header/header';\r\nimport { Identity } from './components/identity/identity';\r\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\r\n\r\n// Pipes:\r\nimport { UppercasePipe } from './pipes/uppercase.pipe';\r\n*/\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        RouterModule,\r\n        NgbModule.forRoot(),\r\n        // No need to export as these modules don't expose any components/directive etc'\r\n        HttpModule,\r\n        JsonpModule\r\n    ],\r\n    declarations: [\r\n        /*\r\n        Pager,\r\n        Header,\r\n        Identity,\r\n        PageNotFoundComponent,\r\n        UppercasePipe\r\n        */\r\n    ],\r\n    exports: [\r\n        // Modules\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        RouterModule,\r\n        NgbModule,\r\n        // Providers, Components, directive, pipes\r\n        /*\r\n        Pager,\r\n        Header,\r\n        Identity,\r\n        PageNotFoundComponent,\r\n        UppercasePipe\r\n        */\r\n    ]\r\n})\r\nexport class SharedModule {\r\n    static forRoot(): ModuleWithProviders {\r\n        return {\r\n            ngModule: SharedModule,\r\n            providers: [\r\n                // Providers\r\n                \r\n                DataService,\r\n                //BasketWrapperService,\r\n                //SecurityService,\r\n                ConfigurationService,\r\n                StorageService\r\n                \r\n            ]\r\n        };\r\n    }\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}